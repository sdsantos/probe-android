# This workflow is triggered on push events to the repository
# It runs the following jobs:
# - build: Ensure the code builds
# - unit-test: Run unit tests
# - instrumented-test: Run instrumented tests
# - assemble-archive: Archive APKs
# - distribute: Upload artifact to Firebase App Distribution
name: Validate
on: [ push ]
jobs:
  build:
    name: Ensure the code builds
    runs-on: ubuntu-latest

    strategy:
      matrix:
        version:
          - "OoniStableFullRelease"
          # - "OoniStableFdroidRelease"
          # - "DwStableFullRelease"
          # - "DwStableFdroidRelease"

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: checkout
        uses: actions/checkout@v4

      - name: Build `StableFullRelease` and `StableFdroidRelease` variants
        run: ./gradlew build${{ matrix.version }} && ./gradlew clean

#  unit-test:
#    name: Run unit tests
#    runs-on: ubuntu-latest
#    needs: [ build ]
#
#    steps:
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: checkout
#        uses: actions/checkout@v4
#
#      - name: Run unit tests
#        run: ./gradlew testOoniStableFullRelease
#
#      - name: Uploads test reports
#        uses: actions/upload-artifact@v4
#        if: failure()
#        with:
#          name: test-report
#          path: app/build/test-results/testOoniStableFullReleaseUnitTest

  instrumented-test:
    name: Run instrumented tests
    runs-on: ubuntu-latest
    needs: [ build ]

    strategy:
      matrix:
        api-level: [ 29 ]
        target: [ google_apis ]

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: checkout
        uses: actions/checkout@v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Run instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          ram-size: 4096M
          script: ./gradlew connectedOoniStableFullDebugAndroidTest

      - name: uploads test reports
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: emulator-test-reports
          path: app/build/reports/androidTests/connected/debug/flavors/ooniStableFull/

#  assemble-archive:
#    name: Archive APKs
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        version:
#          - "OoniStableFullDebug"
#          - "OoniStableFdroidDebug"
#          - "OoniDevFullDebug"
#          - "OoniDevFullDebugAndroidTest"
#          - "DwStableFullDebug"
#          - "DwStableFdroidDebug"
#          - "DwDevFullDebug"
#    needs: [ build ]
#
#    steps:
#      - name: checkout
#        uses: actions/checkout@v4
#
#      - name: Get issue number
#        uses: actions/github-script@v6
#        id: get_issue_number
#        with:
#          script: |
#            if (context.issue.number) {
#              // Return issue number if present
#              return context.issue.number;
#            } else {
#              // Otherwise return issue number from commit
#              return (
#                await github.rest.repos.listPullRequestsAssociatedWithCommit({
#                  commit_sha: context.sha,
#                  owner: context.repo.owner,
#                  repo: context.repo.repo,
#                })
#              ).data[0].number;
#            }
#          result-encoding: string
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Assemble APKs
#        if: success() && steps.get_issue_number.outputs.result
#        run: ./gradlew assemble${{ matrix.version }}
#        env:
#          PR_NUMBER: ${{ steps.get_issue_number.outputs.result }}
#
#      - name: uploads dev apk
#        uses: actions/upload-artifact@v4
#        with:
#          name: ${{ matrix.version }}Apk
#          path: |
#            app/build/outputs/apk/ooniStableFull/debug/app-ooni-stable-full-debug.apk
#            app/build/outputs/apk/ooniStableFdroid/debug/app-ooni-stable-fdroid-debug.apk
#            app/build/outputs/apk/ooniDevFull/debug/app-ooni-dev-full-debug.apk
#            app/build/outputs/apk/androidTest/ooniDevFull/debug/app-ooni-dev-full-debug-androidTest.apk
#            app/build/outputs/apk/dwStableFull/debug/app-dw-stable-full-debug.apk
#            app/build/outputs/apk/dwStableFdroid/debug/app-dw-stable-fdroid-debug.apk
#            app/build/outputs/apk/dwDevFull/debug/app-dw-dev-full-debug.apk
#
#  distribute:
#    name: Upload artifact to Firebase App Distribution
#    runs-on: ubuntu-latest
#    needs: [ assemble-archive ]
#    steps:
#
#      - name: checkout
#        uses: actions/checkout@v4
#
#      - name: Download app APK
#        uses: actions/download-artifact@v4
#        with:
#          name: OoniDevFullDebugApk
#
#      - name: Upload artifact to Firebase App Distribution
#        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
#        id: uploadArtifact
#        with:
#          appId: ${{secrets.FIREBASE_APP_ID}}
#          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
#          groups: testers
#          file: ooniDevFull/debug/app-ooni-dev-full-debug.apk
#      - name: Write Summary
#        run: |
#          echo "View this release in the Firebase console: ${{ steps.uploadArtifact.outputs.FIREBASE_CONSOLE_URI }}" >> $GITHUB_STEP_SUMMARY